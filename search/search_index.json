{"config":{"indexing":"full","lang":["en","ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Basic information \u00b6 The OpenIPC is a alternative firmware for IP cameras and kind of umbrella for other projects that are components of our system. The OpenIPC is a Linux operating system based on Buildroot/OpenWrt projects and targeting IP cameras with chipsets from different vendors, starting with HiSilicon Hi35xx, XiongmaiTech XM5xx and SigmaStar SSC335. Igor Zalatov - project founder and development coordinator. Dmitry Ilyin , Maxim Chertov , Sergey Sharshunov - main participants and co-founders of the project. Dmitry Ermakov - responsible developers Everyone is welcome and can use/contribute to project in any way they find useful ! We would be grateful for the feedback and suggestions. Official links \u00b6 OpenIPC on GitHub - GitHub organization, most projects are hosted here OpenIPC on OpenCollective - OpenCollective community OpenIPC on Docker Hub - Docker containers for building OpenIPC on Twitter - Our main news OpenIPC on YouTube - Our instructions and streams OpenIPC SDK archive - We have created a large collection of SDKs in our team's archive Telegram chat groups \u00b6 OpenIPC (EN) - International channel to discuss the development of our project | * OpenIPC modding (RU) - general issues on modifying IPCam device firmware | * OpenIPC software (RU) - HiSilicon, XM porting in OpenWrt and programmer issues | * OpenIPC advice (RU) - problems, finding solutions, long conversations | * OpenIPC majestic (RU) - for majestic testers | * OpenIPC Iranian (IR) - special group for Iranian users / \u062a\u06cc\u0645 OpenIPC \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u06cc\u0631\u0627\u0646\u06cc | * OpenIPC demo (EN/RU) - test bot with buttons, after connecting, give the \"/menu\" | * OpenIPC ExIPCam (RU) - ExIPCam program and hardware/software repairing devices | * OpenIPC updates (RU) - Firmware & Software updates information channel OpenIPC dev - Firmware & Software development channel Team developments \u00b6 openipc-2.1 - Firmware development and creation system based on Buildroot openipc-1.0 - Firmware development and creation system based on OpenWrt 15.05 exipcam - Cool utility for repairing IPCam (For Windows, work in Linux via Wine) ipcam_dms - IPCam Device Management System (For Windows, work in Linux via Wine) majestic - Universal IPCam streamer minihttp - Open Hisilicon streamer ipctool - Simple utility to check hardware information for IP cameras glutinium - Additional OpenWRT packages OpenIPC alliance \u00b6","title":"Introduction"},{"location":"#basic-information","text":"The OpenIPC is a alternative firmware for IP cameras and kind of umbrella for other projects that are components of our system. The OpenIPC is a Linux operating system based on Buildroot/OpenWrt projects and targeting IP cameras with chipsets from different vendors, starting with HiSilicon Hi35xx, XiongmaiTech XM5xx and SigmaStar SSC335. Igor Zalatov - project founder and development coordinator. Dmitry Ilyin , Maxim Chertov , Sergey Sharshunov - main participants and co-founders of the project. Dmitry Ermakov - responsible developers Everyone is welcome and can use/contribute to project in any way they find useful ! We would be grateful for the feedback and suggestions.","title":"Basic information"},{"location":"#official-links","text":"OpenIPC on GitHub - GitHub organization, most projects are hosted here OpenIPC on OpenCollective - OpenCollective community OpenIPC on Docker Hub - Docker containers for building OpenIPC on Twitter - Our main news OpenIPC on YouTube - Our instructions and streams OpenIPC SDK archive - We have created a large collection of SDKs in our team's archive","title":"Official links"},{"location":"#telegram-chat-groups","text":"OpenIPC (EN) - International channel to discuss the development of our project | * OpenIPC modding (RU) - general issues on modifying IPCam device firmware | * OpenIPC software (RU) - HiSilicon, XM porting in OpenWrt and programmer issues | * OpenIPC advice (RU) - problems, finding solutions, long conversations | * OpenIPC majestic (RU) - for majestic testers | * OpenIPC Iranian (IR) - special group for Iranian users / \u062a\u06cc\u0645 OpenIPC \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u06cc\u0631\u0627\u0646\u06cc | * OpenIPC demo (EN/RU) - test bot with buttons, after connecting, give the \"/menu\" | * OpenIPC ExIPCam (RU) - ExIPCam program and hardware/software repairing devices | * OpenIPC updates (RU) - Firmware & Software updates information channel OpenIPC dev - Firmware & Software development channel","title":"Telegram chat groups"},{"location":"#team-developments","text":"openipc-2.1 - Firmware development and creation system based on Buildroot openipc-1.0 - Firmware development and creation system based on OpenWrt 15.05 exipcam - Cool utility for repairing IPCam (For Windows, work in Linux via Wine) ipcam_dms - IPCam Device Management System (For Windows, work in Linux via Wine) majestic - Universal IPCam streamer minihttp - Open Hisilicon streamer ipctool - Simple utility to check hardware information for IP cameras glutinium - Additional OpenWRT packages","title":"Team developments"},{"location":"#openipc-alliance","text":"","title":"OpenIPC alliance"},{"location":"SDK/","text":"Basic information \u00b6 The OpenIPC is a alternative firmware for IP cameras and kind of umbrella for other projects that are components of our system. The OpenIPC is a Linux operating system based on Buildroot/OpenWrt projects and targeting IP cameras with chipsets from different vendors, starting with HiSilicon Hi35xx, XiongmaiTech XM5xx and SigmaStar SSC335. Igor Zalatov - project founder and development coordinator. Dmitry Ilyin , Maxim Chertov , Sergey Sharshunov - main participants and co-founders of the project. Dmitry Ermakov - responsible developers Everyone is welcome and can use/contribute to project in any way they find useful ! We would be grateful for the feedback and suggestions. Official links \u00b6 OpenIPC on GitHub - GitHub organization, most projects are hosted here OpenIPC on OpenCollective - OpenCollective community OpenIPC on Docker Hub - Docker containers for building OpenIPC on Twitter - Our main news OpenIPC on YouTube - Our instructions and streams OpenIPC SDK archive - We have created a large collection of SDKs in our team's archive Telegram chat groups \u00b6 OpenIPC (EN) - International channel to discuss the development of our project | * OpenIPC modding (RU) - general issues on modifying IPCam device firmware | * OpenIPC software (RU) - HiSilicon, XM porting in OpenWrt and programmer issues | * OpenIPC advice (RU) - problems, finding solutions, long conversations | * OpenIPC majestic (RU) - for majestic testers | * OpenIPC Iranian (IR) - special group for Iranian users / \u062a\u06cc\u0645 OpenIPC \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u06cc\u0631\u0627\u0646\u06cc | * OpenIPC demo (EN/RU) - test bot with buttons, after connecting, give the \"/menu\" | * OpenIPC ExIPCam (RU) - ExIPCam program and hardware/software repairing devices | * OpenIPC updates (RU) - Firmware & Software updates information channel OpenIPC dev - Firmware & Software development channel Team developments \u00b6 openipc-2.1 - Firmware development and creation system based on Buildroot openipc-1.0 - Firmware development and creation system based on OpenWrt 15.05 exipcam - Cool utility for repairing IPCam (For Windows, work in Linux via Wine) ipcam_dms - IPCam Device Management System (For Windows, work in Linux via Wine) majestic - Universal IPCam streamer minihttp - Open Hisilicon streamer ipctool - Simple utility to check hardware information for IP cameras glutinium - Additional OpenWRT packages OpenIPC alliance \u00b6","title":"SDK"},{"location":"SDK/#basic-information","text":"The OpenIPC is a alternative firmware for IP cameras and kind of umbrella for other projects that are components of our system. The OpenIPC is a Linux operating system based on Buildroot/OpenWrt projects and targeting IP cameras with chipsets from different vendors, starting with HiSilicon Hi35xx, XiongmaiTech XM5xx and SigmaStar SSC335. Igor Zalatov - project founder and development coordinator. Dmitry Ilyin , Maxim Chertov , Sergey Sharshunov - main participants and co-founders of the project. Dmitry Ermakov - responsible developers Everyone is welcome and can use/contribute to project in any way they find useful ! We would be grateful for the feedback and suggestions.","title":"Basic information"},{"location":"SDK/#official-links","text":"OpenIPC on GitHub - GitHub organization, most projects are hosted here OpenIPC on OpenCollective - OpenCollective community OpenIPC on Docker Hub - Docker containers for building OpenIPC on Twitter - Our main news OpenIPC on YouTube - Our instructions and streams OpenIPC SDK archive - We have created a large collection of SDKs in our team's archive","title":"Official links"},{"location":"SDK/#telegram-chat-groups","text":"OpenIPC (EN) - International channel to discuss the development of our project | * OpenIPC modding (RU) - general issues on modifying IPCam device firmware | * OpenIPC software (RU) - HiSilicon, XM porting in OpenWrt and programmer issues | * OpenIPC advice (RU) - problems, finding solutions, long conversations | * OpenIPC majestic (RU) - for majestic testers | * OpenIPC Iranian (IR) - special group for Iranian users / \u062a\u06cc\u0645 OpenIPC \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u06cc\u0631\u0627\u0646\u06cc | * OpenIPC demo (EN/RU) - test bot with buttons, after connecting, give the \"/menu\" | * OpenIPC ExIPCam (RU) - ExIPCam program and hardware/software repairing devices | * OpenIPC updates (RU) - Firmware & Software updates information channel OpenIPC dev - Firmware & Software development channel","title":"Telegram chat groups"},{"location":"SDK/#team-developments","text":"openipc-2.1 - Firmware development and creation system based on Buildroot openipc-1.0 - Firmware development and creation system based on OpenWrt 15.05 exipcam - Cool utility for repairing IPCam (For Windows, work in Linux via Wine) ipcam_dms - IPCam Device Management System (For Windows, work in Linux via Wine) majestic - Universal IPCam streamer minihttp - Open Hisilicon streamer ipctool - Simple utility to check hardware information for IP cameras glutinium - Additional OpenWRT packages","title":"Team developments"},{"location":"SDK/#openipc-alliance","text":"","title":"OpenIPC alliance"},{"location":"about/","text":"Basic information \u00b6 The OpenIPC is a alternative firmware for IP cameras and kind of umbrella for other projects that are components of our system. The OpenIPC is a Linux operating system based on Buildroot/OpenWrt projects and targeting IP cameras with chipsets from different vendors, starting with HiSilicon Hi35xx, XiongmaiTech XM5xx and SigmaStar SSC335. Igor Zalatov - project founder and development coordinator. Dmitry Ilyin , Maxim Chertov , Sergey Sharshunov - main participants and co-founders of the project. Dmitry Ermakov - responsible developers Everyone is welcome and can use/contribute to project in any way they find useful ! We would be grateful for the feedback and suggestions. Official links \u00b6 OpenIPC on GitHub - GitHub organization, most projects are hosted here OpenIPC on OpenCollective - OpenCollective community OpenIPC on Docker Hub - Docker containers for building OpenIPC on Twitter - Our main news OpenIPC on YouTube - Our instructions and streams OpenIPC SDK archive - We have created a large collection of SDKs in our team's archive Telegram chat groups \u00b6 OpenIPC (EN) - International channel to discuss the development of our project | * OpenIPC modding (RU) - general issues on modifying IPCam device firmware | * OpenIPC software (RU) - HiSilicon, XM porting in OpenWrt and programmer issues | * OpenIPC advice (RU) - problems, finding solutions, long conversations | * OpenIPC majestic (RU) - for majestic testers | * OpenIPC Iranian (IR) - special group for Iranian users / \u062a\u06cc\u0645 OpenIPC \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u06cc\u0631\u0627\u0646\u06cc | * OpenIPC demo (EN/RU) - test bot with buttons, after connecting, give the \"/menu\" | * OpenIPC ExIPCam (RU) - ExIPCam program and hardware/software repairing devices | * OpenIPC updates (RU) - Firmware & Software updates information channel OpenIPC dev - Firmware & Software development channel Team developments \u00b6 openipc-2.1 - Firmware development and creation system based on Buildroot openipc-1.0 - Firmware development and creation system based on OpenWrt 15.05 exipcam - Cool utility for repairing IPCam (For Windows, work in Linux via Wine) ipcam_dms - IPCam Device Management System (For Windows, work in Linux via Wine) majestic - Universal IPCam streamer minihttp - Open Hisilicon streamer ipctool - Simple utility to check hardware information for IP cameras glutinium - Additional OpenWRT packages OpenIPC alliance \u00b6","title":"About"},{"location":"about/#basic-information","text":"The OpenIPC is a alternative firmware for IP cameras and kind of umbrella for other projects that are components of our system. The OpenIPC is a Linux operating system based on Buildroot/OpenWrt projects and targeting IP cameras with chipsets from different vendors, starting with HiSilicon Hi35xx, XiongmaiTech XM5xx and SigmaStar SSC335. Igor Zalatov - project founder and development coordinator. Dmitry Ilyin , Maxim Chertov , Sergey Sharshunov - main participants and co-founders of the project. Dmitry Ermakov - responsible developers Everyone is welcome and can use/contribute to project in any way they find useful ! We would be grateful for the feedback and suggestions.","title":"Basic information"},{"location":"about/#official-links","text":"OpenIPC on GitHub - GitHub organization, most projects are hosted here OpenIPC on OpenCollective - OpenCollective community OpenIPC on Docker Hub - Docker containers for building OpenIPC on Twitter - Our main news OpenIPC on YouTube - Our instructions and streams OpenIPC SDK archive - We have created a large collection of SDKs in our team's archive","title":"Official links"},{"location":"about/#telegram-chat-groups","text":"OpenIPC (EN) - International channel to discuss the development of our project | * OpenIPC modding (RU) - general issues on modifying IPCam device firmware | * OpenIPC software (RU) - HiSilicon, XM porting in OpenWrt and programmer issues | * OpenIPC advice (RU) - problems, finding solutions, long conversations | * OpenIPC majestic (RU) - for majestic testers | * OpenIPC Iranian (IR) - special group for Iranian users / \u062a\u06cc\u0645 OpenIPC \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u06cc\u0631\u0627\u0646\u06cc | * OpenIPC demo (EN/RU) - test bot with buttons, after connecting, give the \"/menu\" | * OpenIPC ExIPCam (RU) - ExIPCam program and hardware/software repairing devices | * OpenIPC updates (RU) - Firmware & Software updates information channel OpenIPC dev - Firmware & Software development channel","title":"Telegram chat groups"},{"location":"about/#team-developments","text":"openipc-2.1 - Firmware development and creation system based on Buildroot openipc-1.0 - Firmware development and creation system based on OpenWrt 15.05 exipcam - Cool utility for repairing IPCam (For Windows, work in Linux via Wine) ipcam_dms - IPCam Device Management System (For Windows, work in Linux via Wine) majestic - Universal IPCam streamer minihttp - Open Hisilicon streamer ipctool - Simple utility to check hardware information for IP cameras glutinium - Additional OpenWRT packages","title":"Team developments"},{"location":"about/#openipc-alliance","text":"","title":"OpenIPC alliance"},{"location":"firmware/","text":"Introduction \u00b6 This page describes OpenWRT-based firmware variant. Firmware features \u00b6 RTSP, ONVIF, NETIP Native ipeye service support Support squashfs, jffs2, overlayfs, vfat Vlan and bridges support Standard OPKG package system Tiny SNMP daemon Curl with SSL for upload/download files Run arbitrary command from u-boot ENV (linux_cmd=) Simple L2/L3 VPN with traffic shaping and compression (vtun) Simply sender Telegram bot (estgb) Low cost 3G USB modems support in hilink and ppp modes \u00b5VPN tunnel service and more ... Supported devices \u00b6 We aim to develop universal , portable firmware supporting wide range of manufacturers and delivering updates and fixes which vendors oftentimes unable to deliver. The list is constantly updated, please visit often and/or follow our Telegram groups for new release notifications. OpenIPC 1.0 (OpenWRT based) \u00b6 Processor Sensor Vendor SKU Board Status Hi3516Cv100 IMX222_spi_dc XM BLK18C-0222-38X38_S-V1.03 test Hi3518Ev100 OV9712_i2c_dc CamHi/Xin IPC18E_9712_V2.0/V3.1 test Hi3516Cv200 IMX323_i2c_dc XM BLK16CV-0323-38X38-V1.01 yes Hi3516Cv200 IMX323_i2c_dc JVT S323H16VF IPS323-H16V-38X38-V2 yes Hi3516Cv200 IMX323_i2c_mipi XM ? Hi3518Ev200 AR0130_i2c_dc XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0002-2035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0022-0130-38X38-V1.01 yes Hi3518Ev200 OV2735_i2c_dc Dahua DH-IPC-C22P E305654 JX02 94V-0 wip Hi3518Ev200 OV9732_ XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 OV9732_i2c_dc Longse/HS LS-IP100/40 3518EV200-OV9732-V1.0 yes Hi3518Ev200 OV9732_i2c_dc Rostelecom QVC-IPC-136W E305654 JX02 94V-0 wip Hi3518Ev200 SC2135_i2c_dc XM BLK18EV-0035-0042-38X38_S-V1.01 yes Hi3518Ev200 SC2235_i2c_dc XM BLK18EV-0235-38X38-B-V1.01 yes Hi3516Cv300 AR0237_i2c_dc XM BLK16CV3-0237P-38X38-S-V1.01 yes Hi3516Cv300 IMX307_i2c_lvds Raysharp RS-CM-188D 2018-03-16 E150111 yes Hi3516Cv300 IMX323_i2c_dc Longse/HS HI3516CV300-IMX323-POE-TF V1.1 yes Hi3516Cv300 IMX323_i2c_dc Sunywo ZB6323 IPG5020A-T-N6-V0.1 yes Hi3516Cv300 IMX323_i2c_dc XM IVG-HP201Y-AE yes Hi3516Cv300 IMX291_i2c_lvds XM IVG-HP203Y-AE yes Hi3516Cv300 IMX323_spi_dc JVT S323H16XF IPS323-H16X-38X38-V2/V3 yes Hi3516Cv300 JXF22_i2c_dc XM BLK16CV3-0022-38X38-S-V1.01 yes Hi3516Ev100 IMX323_i2c_dc XM BLK16E-0323-38X38-B-V1.01 yes Hi3516Ev100 SC2235P_i2c_dc XM 80HE20PS-S BLK16E-0235-38X38-S-V2.03 yes OpenIPC 2.1 (Buildroot based) \u00b6 Processor Sensor Vendor SKU Board Status Hi3516Ev200 IMX307_i2c_mipi XM IVG-85HF20PY-S yes Hi3516Ev200 SC4239P_i2c_mipi XM IVG-85HF30PS-S yes Hi3516Ev300 IMX335_i2c_mipi XM IVG-85HG50PYA-S yes SSC335 SC3335 Unknown yes More information about sensors (translated from Russian automatically) - https://cctvsp.ru Web interface \u00b6 http://192.168.1.10 - Standard system interface based on OpenWrt Luci Majestic streamer \u00b6 Majestic is a video streaming application, the heart of our firmware (in relation to camera/video surveillance functionality). It's configurable via file /etc/majestic.yaml and by default has many features/services enabled. Unneded options can be turned off for better security and performance. To run majestic in debug mode: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic To run majestic in production mode restart the camera or run command: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic 2>&1 | logger -p daemon.info -t majestic & Camera related URLs in firmware \u00b6 With firmware running, you can access the camera using URLs below (192.168.1.10 is the default IP address): http://192.168.1.10:8888 - HLS live streaming http://192.168.1.10:8888/image.jpg - JPEG image shapshot http://192.168.1.10:8888/image.heif - HEIF image snapshot http://192.168.1.10:8888/image.jpg?width=640&height=360&qfactor=73&color2gray=1 http://192.168.1.10:8888/image.dng - snapshot from sensor in RAW (Adobe DNG) format (only for v2/v3 HiSilicon processors) http://192.168.1.10:8888/mjpeg.html - MJPEG & MP3 streaming http://192.168.1.10:8888/video.mp4 - fMP4 video http://192.168.1.10:8888/audio.mp3 - MP3 audio stream http://192.168.1.10:8888/audio.pcm - Raw PCM audio stream http://192.168.1.10:8888/audio.opus - Experimentally in new versions http://192.168.1.10:8888/audio.m4a - Experimentally in new versions rtsp://192.168.1.10:554/stream=0 - Main channel of RTSP stream (section \"video0:\" in config ) rtsp://192.168.1.10:554/stream=1 - Second channel RTSP streamer (section \"video1:\" in config ) Statistical data \u00b6 Software might do product usage data collection including SoC and sensor model name to gather statistics used in QA process. We guaranty that the data is fully anonymized, and does not contain anything that can arguably be considered data about an individual, that could be considered end-user data; or that could be sensitive or confidential to users. Getting firmware \u00b6 Downloads (latest dev) \u00b6 Building status SoC U-Boot Kernel Rootfs Maintainer Hi3516CV100 uboot kernel rootfs IZ+SS+DI Hi3516CV200 uboot kernel rootfs IZ Hi3516CV300 uboot kernel rootfs IZ+DI Hi3516EV100 uboot kernel rootfs IZ+DI Hi3518AV100 uboot kernel rootfs IZ+SS+DI Hi3518CV100 uboot kernel rootfs IZ+SS+DI Hi3518EV100 uboot kernel rootfs IZ+SS+DI Hi3518EV200 uboot kernel rootfs IZ Hi3518EV201 uboot kernel rootfs IZ Hi3520DV100 ! kernel rootfs IZ Hi3520DV200 ! kernel rootfs IZ Releases \u00b6 The releases of the OpenIPC firmware is hosted at https://github.com/OpenIPC/chaos_calmer/releases Source code \u00b6 The source code of the OpenIPC firmware is hosted at https://github.com/openipc/chaos_calmer Building from source \u00b6 Build on Linux machine \u00b6 Usage example for Debian 8/9 git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git OpenIPC cd OpenIPC ./Project_OpenIPC.sh update ./Project_OpenIPC.sh 16cv300_DEFAULT Use Docker for building \u00b6 Default Dockerfile.openipc FROM debian:stretch RUN DEBIAN_FRONTEND = noninteractive apt-get update \\ && apt-get --no-install-recommends -y install bc bison build-essential \\ ca-certificates cmake cpio curl dos2unix file flex gawk gcc-multilib \\ gettext gettext-base git intltool libc6-dev liblocale-gettext-perl \\ libncurses-dev libssl-dev locales mc openssl python rsync subversion \\ time tofrodos unzip upx wget zlib1g-dev \\ && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias \\ en_US.UTF-8 && rm -rf /var/lib/apt/lists/* ENV LANG en_US.utf8 WORKDIR /src/openipc RUN git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git /src/openipc RUN ./Project_OpenIPC.sh update RUN ./Project_OpenIPC.sh 18ev200_DEFAULT # < = Change this ID to you profile Start building #!/bin/bash docker build -t openipc -f Dockerfile.openipc . Preparing to install \u00b6 Get access to U-boot \u00b6 Serial (UART) connection to your camera device is required. Dahua | Press Shift 8 in U-boot start JVT | Press Ctrl+Q in U-boot start XM | Press Ctrl+C in U-boot start SigmaStar | Press Ctrl+B (UNIV) or Enter (Anjvision) in U-boot start Backup original MAC \u00b6 You should definitely write the original MAC of your device on the eth0 port. This is important and will be necessary at the final stage of device configuration. Backup original firmware \u00b6 8M Flash \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x800000 tftp 0x82000000 fullflash.img 0x800000 16M Flash \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x1000000 tftp 0x82000000 fullflash.img 0x1000000 32M Flash \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 2000000 sf read 0x82000000 0x0 0x2000000 tftp 0x82000000 fullflash.img 0x2000000 Flash and memory layout \u00b6 We have developed a universal partition system for camera flash chips and it is now available as standard for all types of devices. (Note that it means it likely doesn't match vendor flash layout.) OpenIPC flash layout \u00b6 0x000000000000-0x000000040000 : \"boot\" 0x000000040000-0x000000050000 : \"env\" 0x000000050000-0x000000250000 : \"kernel\" 0x000000250000-0x000000750000 : \"rootfs\" 0x000000750000-0x000001000000 : \"rootfs_data\" Kernel Memory Load Addresses \u00b6 loadaddr-$(CONFIG_TARGET_hi35xx_16cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv300) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev200) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_18cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev201) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv200) := 0x80008000 Flashing new firmware \u00b6 Attention ! All examples indicate the download of firmware components via the TFTP server. If your device does not have an Ethernet port, replace in all lines the tftp command everywhere with fatload mmc 0:1 For example: tftp 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin # fatload mmc 0:1 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin Hi3516Cv100 \u00b6 This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! Experimental devices: 00:12:16:FA:F3:52 00:12:12:10:31:54 - BLK18C_0222_38x38_S_v1.03 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3516Cv200 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3516Cv300 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3516Ev100 \u00b6 Experimental devices: 00:12:13:02:d7:2c setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3518Cv100 \u00b6 This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3518Ev100 \u00b6 This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3518Ev200 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3520Dv100 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3520Dv200 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Updating parts of the firmware \u00b6 If you already have OpenIPC firmware installed, you can update individual flash partitions from shell command line: Update u-boot \u00b6 flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin boot or flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin /dev/mtd0 Update kernel \u00b6 flashcp -v openwrt-hi35xx-XXXXX-default-uImage kernel Update rootfs \u00b6 flashcp -v openwrt-hi35xx-XXXXX-default-root.squashfs rootfs Configuring system after installation \u00b6 Format overlayfs partition \u00b6 Must be executed on first run flash_eraseall -j /dev/$(awk -F ':' '/rootfs_data/ {print $1}' /proc/mtd) reboot Installing the original MAC \u00b6 U-boot ENV and Linux UCI fw_setenv ethaddr 00:01:02:03:04:05 uci set network.lan.macaddr=00:01:02:03:04:05 uci commit Installing the correct sensor \u00b6 Specify your correct sensor, control type, and data bus fw_setenv sensor imx291_i2c_lvds Resetting configuration \u00b6 If something went wrong, you can reset configuration to defaults. Clean overlayfs (reset) \u00b6 Restore to default Linux settings firstboot reboot Clean u-boot env \u00b6 Restore to default u-boot env flash_eraseall -j /dev/$(awk -F ':' '/env/ {print $1}' /proc/mtd) reboot Recover backup firmware \u00b6 If something goes horribly wrong and you want back your backed up firmware Restore backup up firmware via serial Install kermit using instructions here or similar. Here are the sample commands for 8MB Flash kermit Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x002fb3f1 = 3126257 Bytes ## Start Addr = 0x82000000 OpenIPC # sf probe 0 8192 KiB hi_sfc at 0:0 is now current device OpenIPC # mw.b 0x82000000 ff 1000000 OpenIPC # loadb 0x82000000 ## Ready for binary (kermit) download to 0x82000000 at 115200 bps... (Back at alex-B85M-D3H) ---------------------------------------------------- Linux Kermit> SEND /srv/tftp/fullflash.img Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x00800000 = 8388608 Bytes ## Start Addr = 0x82000000 OpenIPC # sf erase 0x0 0x00800000 Erasing at 0x800000 -- 100% complete. OpenIPC # sf write 0x82000000 0x0 ${filesize} Writing at 0x800000 -- 100% complete. OpenIPC # Restore backup up firmware via TFTP Here are the commands for 8MB Flash setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 fullflash.img sf erase 0x0 0x00800000 sf write 0x82000000 0x0 ${filesize} Reference Book \u00b6 To be written... Vendors \u00b6 ACTi Anjvision | http://icamra.cn/ Ansjer / ZOSI Anviz Brovotech Camasmart / Filsion Cantonk CCDCAM , maybe a trading house... FSAN Herospeed / Longse http://www.ipcam.xin/ Jovision http://www.jvt.cc/English/about.html LENOTEL , maybe a trading house... Longse / Herospeed Milesight Raysharp Ruision Safer , maybe a hardware assembler... http://www.sunywo.com/cn/index.shtml Tiandy Topsee TVT UNIVIEW VandSec / Yoosee , maybe a trading house... VStarcam , maybe a trading house... Wansview XM Z-BEN , maybe a trading house... ZOSI / Ansjer","title":"Firmware"},{"location":"firmware/#introduction","text":"This page describes OpenWRT-based firmware variant.","title":"Introduction"},{"location":"firmware/#firmware-features","text":"RTSP, ONVIF, NETIP Native ipeye service support Support squashfs, jffs2, overlayfs, vfat Vlan and bridges support Standard OPKG package system Tiny SNMP daemon Curl with SSL for upload/download files Run arbitrary command from u-boot ENV (linux_cmd=) Simple L2/L3 VPN with traffic shaping and compression (vtun) Simply sender Telegram bot (estgb) Low cost 3G USB modems support in hilink and ppp modes \u00b5VPN tunnel service and more ...","title":"Firmware features"},{"location":"firmware/#supported-devices","text":"We aim to develop universal , portable firmware supporting wide range of manufacturers and delivering updates and fixes which vendors oftentimes unable to deliver. The list is constantly updated, please visit often and/or follow our Telegram groups for new release notifications.","title":"Supported devices"},{"location":"firmware/#openipc-10-openwrt-based","text":"Processor Sensor Vendor SKU Board Status Hi3516Cv100 IMX222_spi_dc XM BLK18C-0222-38X38_S-V1.03 test Hi3518Ev100 OV9712_i2c_dc CamHi/Xin IPC18E_9712_V2.0/V3.1 test Hi3516Cv200 IMX323_i2c_dc XM BLK16CV-0323-38X38-V1.01 yes Hi3516Cv200 IMX323_i2c_dc JVT S323H16VF IPS323-H16V-38X38-V2 yes Hi3516Cv200 IMX323_i2c_mipi XM ? Hi3518Ev200 AR0130_i2c_dc XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0002-2035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0022-0130-38X38-V1.01 yes Hi3518Ev200 OV2735_i2c_dc Dahua DH-IPC-C22P E305654 JX02 94V-0 wip Hi3518Ev200 OV9732_ XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 OV9732_i2c_dc Longse/HS LS-IP100/40 3518EV200-OV9732-V1.0 yes Hi3518Ev200 OV9732_i2c_dc Rostelecom QVC-IPC-136W E305654 JX02 94V-0 wip Hi3518Ev200 SC2135_i2c_dc XM BLK18EV-0035-0042-38X38_S-V1.01 yes Hi3518Ev200 SC2235_i2c_dc XM BLK18EV-0235-38X38-B-V1.01 yes Hi3516Cv300 AR0237_i2c_dc XM BLK16CV3-0237P-38X38-S-V1.01 yes Hi3516Cv300 IMX307_i2c_lvds Raysharp RS-CM-188D 2018-03-16 E150111 yes Hi3516Cv300 IMX323_i2c_dc Longse/HS HI3516CV300-IMX323-POE-TF V1.1 yes Hi3516Cv300 IMX323_i2c_dc Sunywo ZB6323 IPG5020A-T-N6-V0.1 yes Hi3516Cv300 IMX323_i2c_dc XM IVG-HP201Y-AE yes Hi3516Cv300 IMX291_i2c_lvds XM IVG-HP203Y-AE yes Hi3516Cv300 IMX323_spi_dc JVT S323H16XF IPS323-H16X-38X38-V2/V3 yes Hi3516Cv300 JXF22_i2c_dc XM BLK16CV3-0022-38X38-S-V1.01 yes Hi3516Ev100 IMX323_i2c_dc XM BLK16E-0323-38X38-B-V1.01 yes Hi3516Ev100 SC2235P_i2c_dc XM 80HE20PS-S BLK16E-0235-38X38-S-V2.03 yes","title":"OpenIPC 1.0 (OpenWRT based)"},{"location":"firmware/#openipc-21-buildroot-based","text":"Processor Sensor Vendor SKU Board Status Hi3516Ev200 IMX307_i2c_mipi XM IVG-85HF20PY-S yes Hi3516Ev200 SC4239P_i2c_mipi XM IVG-85HF30PS-S yes Hi3516Ev300 IMX335_i2c_mipi XM IVG-85HG50PYA-S yes SSC335 SC3335 Unknown yes More information about sensors (translated from Russian automatically) - https://cctvsp.ru","title":"OpenIPC 2.1 (Buildroot based)"},{"location":"firmware/#web-interface","text":"http://192.168.1.10 - Standard system interface based on OpenWrt Luci","title":"Web interface"},{"location":"firmware/#majestic-streamer","text":"Majestic is a video streaming application, the heart of our firmware (in relation to camera/video surveillance functionality). It's configurable via file /etc/majestic.yaml and by default has many features/services enabled. Unneded options can be turned off for better security and performance. To run majestic in debug mode: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic To run majestic in production mode restart the camera or run command: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic 2>&1 | logger -p daemon.info -t majestic &","title":"Majestic streamer"},{"location":"firmware/#camera-related-urls-in-firmware","text":"With firmware running, you can access the camera using URLs below (192.168.1.10 is the default IP address): http://192.168.1.10:8888 - HLS live streaming http://192.168.1.10:8888/image.jpg - JPEG image shapshot http://192.168.1.10:8888/image.heif - HEIF image snapshot http://192.168.1.10:8888/image.jpg?width=640&height=360&qfactor=73&color2gray=1 http://192.168.1.10:8888/image.dng - snapshot from sensor in RAW (Adobe DNG) format (only for v2/v3 HiSilicon processors) http://192.168.1.10:8888/mjpeg.html - MJPEG & MP3 streaming http://192.168.1.10:8888/video.mp4 - fMP4 video http://192.168.1.10:8888/audio.mp3 - MP3 audio stream http://192.168.1.10:8888/audio.pcm - Raw PCM audio stream http://192.168.1.10:8888/audio.opus - Experimentally in new versions http://192.168.1.10:8888/audio.m4a - Experimentally in new versions rtsp://192.168.1.10:554/stream=0 - Main channel of RTSP stream (section \"video0:\" in config ) rtsp://192.168.1.10:554/stream=1 - Second channel RTSP streamer (section \"video1:\" in config )","title":"Camera related URLs in firmware"},{"location":"firmware/#statistical-data","text":"Software might do product usage data collection including SoC and sensor model name to gather statistics used in QA process. We guaranty that the data is fully anonymized, and does not contain anything that can arguably be considered data about an individual, that could be considered end-user data; or that could be sensitive or confidential to users.","title":"Statistical data"},{"location":"firmware/#getting-firmware","text":"","title":"Getting firmware"},{"location":"firmware/#downloads-latest-dev","text":"Building status SoC U-Boot Kernel Rootfs Maintainer Hi3516CV100 uboot kernel rootfs IZ+SS+DI Hi3516CV200 uboot kernel rootfs IZ Hi3516CV300 uboot kernel rootfs IZ+DI Hi3516EV100 uboot kernel rootfs IZ+DI Hi3518AV100 uboot kernel rootfs IZ+SS+DI Hi3518CV100 uboot kernel rootfs IZ+SS+DI Hi3518EV100 uboot kernel rootfs IZ+SS+DI Hi3518EV200 uboot kernel rootfs IZ Hi3518EV201 uboot kernel rootfs IZ Hi3520DV100 ! kernel rootfs IZ Hi3520DV200 ! kernel rootfs IZ","title":"Downloads (latest dev)"},{"location":"firmware/#releases","text":"The releases of the OpenIPC firmware is hosted at https://github.com/OpenIPC/chaos_calmer/releases","title":"Releases"},{"location":"firmware/#source-code","text":"The source code of the OpenIPC firmware is hosted at https://github.com/openipc/chaos_calmer","title":"Source code"},{"location":"firmware/#building-from-source","text":"","title":"Building from source"},{"location":"firmware/#build-on-linux-machine","text":"Usage example for Debian 8/9 git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git OpenIPC cd OpenIPC ./Project_OpenIPC.sh update ./Project_OpenIPC.sh 16cv300_DEFAULT","title":"Build on Linux machine"},{"location":"firmware/#use-docker-for-building","text":"Default Dockerfile.openipc FROM debian:stretch RUN DEBIAN_FRONTEND = noninteractive apt-get update \\ && apt-get --no-install-recommends -y install bc bison build-essential \\ ca-certificates cmake cpio curl dos2unix file flex gawk gcc-multilib \\ gettext gettext-base git intltool libc6-dev liblocale-gettext-perl \\ libncurses-dev libssl-dev locales mc openssl python rsync subversion \\ time tofrodos unzip upx wget zlib1g-dev \\ && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias \\ en_US.UTF-8 && rm -rf /var/lib/apt/lists/* ENV LANG en_US.utf8 WORKDIR /src/openipc RUN git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git /src/openipc RUN ./Project_OpenIPC.sh update RUN ./Project_OpenIPC.sh 18ev200_DEFAULT # < = Change this ID to you profile Start building #!/bin/bash docker build -t openipc -f Dockerfile.openipc .","title":"Use Docker for building"},{"location":"firmware/#preparing-to-install","text":"","title":"Preparing to install"},{"location":"firmware/#get-access-to-u-boot","text":"Serial (UART) connection to your camera device is required. Dahua | Press Shift 8 in U-boot start JVT | Press Ctrl+Q in U-boot start XM | Press Ctrl+C in U-boot start SigmaStar | Press Ctrl+B (UNIV) or Enter (Anjvision) in U-boot start","title":"Get access to U-boot"},{"location":"firmware/#backup-original-mac","text":"You should definitely write the original MAC of your device on the eth0 port. This is important and will be necessary at the final stage of device configuration.","title":"Backup original MAC"},{"location":"firmware/#backup-original-firmware","text":"","title":"Backup original firmware"},{"location":"firmware/#8m-flash","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x800000 tftp 0x82000000 fullflash.img 0x800000","title":"8M Flash"},{"location":"firmware/#16m-flash","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x1000000 tftp 0x82000000 fullflash.img 0x1000000","title":"16M Flash"},{"location":"firmware/#32m-flash","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 2000000 sf read 0x82000000 0x0 0x2000000 tftp 0x82000000 fullflash.img 0x2000000","title":"32M Flash"},{"location":"firmware/#flash-and-memory-layout","text":"We have developed a universal partition system for camera flash chips and it is now available as standard for all types of devices. (Note that it means it likely doesn't match vendor flash layout.)","title":"Flash and memory layout"},{"location":"firmware/#openipc-flash-layout","text":"0x000000000000-0x000000040000 : \"boot\" 0x000000040000-0x000000050000 : \"env\" 0x000000050000-0x000000250000 : \"kernel\" 0x000000250000-0x000000750000 : \"rootfs\" 0x000000750000-0x000001000000 : \"rootfs_data\"","title":"OpenIPC flash layout"},{"location":"firmware/#kernel-memory-load-addresses","text":"loadaddr-$(CONFIG_TARGET_hi35xx_16cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv300) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev200) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_18cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev201) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv200) := 0x80008000","title":"Kernel Memory Load Addresses"},{"location":"firmware/#flashing-new-firmware","text":"Attention ! All examples indicate the download of firmware components via the TFTP server. If your device does not have an Ethernet port, replace in all lines the tftp command everywhere with fatload mmc 0:1 For example: tftp 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin # fatload mmc 0:1 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin","title":"Flashing new firmware"},{"location":"firmware/#hi3516cv100","text":"This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! Experimental devices: 00:12:16:FA:F3:52 00:12:12:10:31:54 - BLK18C_0222_38x38_S_v1.03 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Cv100"},{"location":"firmware/#hi3516cv200","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Cv200"},{"location":"firmware/#hi3516cv300","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Cv300"},{"location":"firmware/#hi3516ev100","text":"Experimental devices: 00:12:13:02:d7:2c setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Ev100"},{"location":"firmware/#hi3518cv100","text":"This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3518Cv100"},{"location":"firmware/#hi3518ev100","text":"This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3518Ev100"},{"location":"firmware/#hi3518ev200","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3518Ev200"},{"location":"firmware/#hi3520dv100","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3520Dv100"},{"location":"firmware/#hi3520dv200","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3520Dv200"},{"location":"firmware/#updating-parts-of-the-firmware","text":"If you already have OpenIPC firmware installed, you can update individual flash partitions from shell command line:","title":"Updating parts of the firmware"},{"location":"firmware/#update-u-boot","text":"flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin boot or flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin /dev/mtd0","title":"Update u-boot"},{"location":"firmware/#update-kernel","text":"flashcp -v openwrt-hi35xx-XXXXX-default-uImage kernel","title":"Update kernel"},{"location":"firmware/#update-rootfs","text":"flashcp -v openwrt-hi35xx-XXXXX-default-root.squashfs rootfs","title":"Update rootfs"},{"location":"firmware/#configuring-system-after-installation","text":"","title":"Configuring system after installation"},{"location":"firmware/#format-overlayfs-partition","text":"Must be executed on first run flash_eraseall -j /dev/$(awk -F ':' '/rootfs_data/ {print $1}' /proc/mtd) reboot","title":"Format overlayfs partition"},{"location":"firmware/#installing-the-original-mac","text":"U-boot ENV and Linux UCI fw_setenv ethaddr 00:01:02:03:04:05 uci set network.lan.macaddr=00:01:02:03:04:05 uci commit","title":"Installing the original MAC"},{"location":"firmware/#installing-the-correct-sensor","text":"Specify your correct sensor, control type, and data bus fw_setenv sensor imx291_i2c_lvds","title":"Installing the correct sensor"},{"location":"firmware/#resetting-configuration","text":"If something went wrong, you can reset configuration to defaults.","title":"Resetting configuration"},{"location":"firmware/#clean-overlayfs-reset","text":"Restore to default Linux settings firstboot reboot","title":"Clean overlayfs (reset)"},{"location":"firmware/#clean-u-boot-env","text":"Restore to default u-boot env flash_eraseall -j /dev/$(awk -F ':' '/env/ {print $1}' /proc/mtd) reboot","title":"Clean u-boot env"},{"location":"firmware/#recover-backup-firmware","text":"If something goes horribly wrong and you want back your backed up firmware Restore backup up firmware via serial Install kermit using instructions here or similar. Here are the sample commands for 8MB Flash kermit Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x002fb3f1 = 3126257 Bytes ## Start Addr = 0x82000000 OpenIPC # sf probe 0 8192 KiB hi_sfc at 0:0 is now current device OpenIPC # mw.b 0x82000000 ff 1000000 OpenIPC # loadb 0x82000000 ## Ready for binary (kermit) download to 0x82000000 at 115200 bps... (Back at alex-B85M-D3H) ---------------------------------------------------- Linux Kermit> SEND /srv/tftp/fullflash.img Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x00800000 = 8388608 Bytes ## Start Addr = 0x82000000 OpenIPC # sf erase 0x0 0x00800000 Erasing at 0x800000 -- 100% complete. OpenIPC # sf write 0x82000000 0x0 ${filesize} Writing at 0x800000 -- 100% complete. OpenIPC # Restore backup up firmware via TFTP Here are the commands for 8MB Flash setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 fullflash.img sf erase 0x0 0x00800000 sf write 0x82000000 0x0 ${filesize}","title":"Recover backup firmware"},{"location":"firmware/#reference-book","text":"To be written...","title":"Reference Book"},{"location":"firmware/#vendors","text":"ACTi Anjvision | http://icamra.cn/ Ansjer / ZOSI Anviz Brovotech Camasmart / Filsion Cantonk CCDCAM , maybe a trading house... FSAN Herospeed / Longse http://www.ipcam.xin/ Jovision http://www.jvt.cc/English/about.html LENOTEL , maybe a trading house... Longse / Herospeed Milesight Raysharp Ruision Safer , maybe a hardware assembler... http://www.sunywo.com/cn/index.shtml Tiandy Topsee TVT UNIVIEW VandSec / Yoosee , maybe a trading house... VStarcam , maybe a trading house... Wansview XM Z-BEN , maybe a trading house... ZOSI / Ansjer","title":"Vendors"},{"location":"sponsor/","text":"Sponsors are welcome \u00b6 Let's support opensource cameras together ! OpenIPC is asking for your help to support development cost and long-term maintenance of what we believe will serve a fundamental role in the advancement of a stable, flexible and most importantly, Open IP Network Camera Framework for users worldwide. The funds are generally intended to be used to compensate part/full-time maintainers. Most core team members contribute in their spare time and most of the time, personally fund hardware. Your financial incentives will help limit their personal costs while also staying up-to-date with the latest hardware. It is often beneficial to organize meetings, plan events and meet with manufacturers for access to their SDK development kits which are often expensive. Your contribution will help us advance development proposals forward, and interact with the community on a regular basis. Recognition for your recurring donations will be permanently published in the Backer/Sponsors section on our GitHub page! We're committed to open and transparent accounting and are grateful for any support you are able to provide for our efforts so we may advance OpenIPC and our mission towards a sustainable future. If you have issues getting access or download files, feel free to contact us on our Telegram channel . Donations \u00b6 If you like our work, please consider supporting us on Opencollective or PayPal or YooMoney Thanks a lot !!!","title":"Support OpenSource"},{"location":"sponsor/#sponsors-are-welcome","text":"Let's support opensource cameras together ! OpenIPC is asking for your help to support development cost and long-term maintenance of what we believe will serve a fundamental role in the advancement of a stable, flexible and most importantly, Open IP Network Camera Framework for users worldwide. The funds are generally intended to be used to compensate part/full-time maintainers. Most core team members contribute in their spare time and most of the time, personally fund hardware. Your financial incentives will help limit their personal costs while also staying up-to-date with the latest hardware. It is often beneficial to organize meetings, plan events and meet with manufacturers for access to their SDK development kits which are often expensive. Your contribution will help us advance development proposals forward, and interact with the community on a regular basis. Recognition for your recurring donations will be permanently published in the Backer/Sponsors section on our GitHub page! We're committed to open and transparent accounting and are grateful for any support you are able to provide for our efforts so we may advance OpenIPC and our mission towards a sustainable future. If you have issues getting access or download files, feel free to contact us on our Telegram channel .","title":"Sponsors are welcome"},{"location":"sponsor/#donations","text":"If you like our work, please consider supporting us on Opencollective or PayPal or YooMoney Thanks a lot !!!","title":"Donations"},{"location":"devices/hs303/","text":"Switcam HS-303 \u00b6 \u041e\u0431\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u043c\u0435\u0442\u043a\u0438 \u043f\u043e \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 Switcam HS303 (\u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u0439) \u0432 OpenIPC v1.0 (\u043d\u0430 \u0431\u0430\u0437\u0435 OpenWrt). \u041e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u043f\u0440\u043e\u0448\u0438\u0432\u043e\u043a (\u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435) \u0432 \u0433\u0440\u0443\u043f\u043f\u0435 Telegram \u0421\u0431\u043e\u0440\u043d\u0438\u043a \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 Q&A \u00b6 Q. \u041a\u0430\u043a\u0438\u0435 \u0442\u0438\u043f\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 OpenIPC v1.0 ? A. \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f Switcam HS-303 (v1). \u0412 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 v2 \u0438 v3. Q. \u0413\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0443 \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0420\u043e\u0441\u0442\u0435\u043b\u0435\u043a\u043e\u043c Switcam HS303 (v1) ? A. \u0412 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0438 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f \u043a 1 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f, \u0430 \u043f\u043e\u043a\u0430 \u043f\u0438\u0448\u0438\u0442\u0435 \u0432 \u043b\u0438\u0447\u043a\u0443 @Flyrouter Q. \u041a\u0430\u043a\u043e\u0439 \u043f\u0443\u0442\u044c \u0434\u043e SD \u043a\u0430\u0440\u0442\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0432 majestic.yaml ? A. /mnt/mmc/%Y/%m/%d/%H.mp4","title":"Switcam HS303 (ru)"},{"location":"devices/hs303/#switcam-hs-303","text":"\u041e\u0431\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u043c\u0435\u0442\u043a\u0438 \u043f\u043e \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 Switcam HS303 (\u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u0439) \u0432 OpenIPC v1.0 (\u043d\u0430 \u0431\u0430\u0437\u0435 OpenWrt). \u041e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u043f\u0440\u043e\u0448\u0438\u0432\u043e\u043a (\u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435) \u0432 \u0433\u0440\u0443\u043f\u043f\u0435 Telegram","title":"Switcam HS-303"},{"location":"devices/hs303/#qa","text":"Q. \u041a\u0430\u043a\u0438\u0435 \u0442\u0438\u043f\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 OpenIPC v1.0 ? A. \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f Switcam HS-303 (v1). \u0412 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 v2 \u0438 v3. Q. \u0413\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0443 \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0420\u043e\u0441\u0442\u0435\u043b\u0435\u043a\u043e\u043c Switcam HS303 (v1) ? A. \u0412 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0438 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f \u043a 1 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f, \u0430 \u043f\u043e\u043a\u0430 \u043f\u0438\u0448\u0438\u0442\u0435 \u0432 \u043b\u0438\u0447\u043a\u0443 @Flyrouter Q. \u041a\u0430\u043a\u043e\u0439 \u043f\u0443\u0442\u044c \u0434\u043e SD \u043a\u0430\u0440\u0442\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0432 majestic.yaml ? A. /mnt/mmc/%Y/%m/%d/%H.mp4","title":"\u0421\u0431\u043e\u0440\u043d\u0438\u043a \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 Q&amp;A"},{"location":"firmware/openipc-1.0/","text":"Introduction \u00b6 This page describes OpenWRT-based firmware variant. Firmware features \u00b6 RTSP, ONVIF, NETIP Native ipeye service support Support squashfs, jffs2, overlayfs, vfat Vlan and bridges support Standard OPKG package system Tiny SNMP daemon Curl with SSL for upload/download files Run arbitrary command from u-boot ENV (linux_cmd=) Simple L2/L3 VPN with traffic shaping and compression (vtun) Simply sender Telegram bot (estgb) Low cost 3G USB modems support in hilink and ppp modes \u00b5VPN tunnel service and more ... Supported devices \u00b6 We aim to develop universal , portable firmware supporting wide range of manufacturers and delivering updates and fixes which vendors oftentimes unable to deliver. The list is constantly updated, please visit often and/or follow our Telegram groups for new release notifications. OpenIPC 1.0 (OpenWRT based) \u00b6 Processor Sensor Vendor SKU Board Status Hi3516Cv100 IMX222_spi_dc XM BLK18C-0222-38X38_S-V1.03 test Hi3518Ev100 OV9712_i2c_dc CamHi/Xin IPC18E_9712_V2.0/V3.1 test Hi3516Cv200 IMX323_i2c_dc XM BLK16CV-0323-38X38-V1.01 yes Hi3516Cv200 IMX323_i2c_dc JVT S323H16VF IPS323-H16V-38X38-V2 yes Hi3516Cv200 IMX323_i2c_mipi XM ? Hi3518Ev200 AR0130_i2c_dc XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0002-2035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0022-0130-38X38-V1.01 yes Hi3518Ev200 OV2735_i2c_dc Dahua DH-IPC-C22P E305654 JX02 94V-0 wip Hi3518Ev200 OV9732_ XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 OV9732_i2c_dc Longse/HS LS-IP100/40 3518EV200-OV9732-V1.0 yes Hi3518Ev200 OV9732_i2c_dc Rostelecom QVC-IPC-136W E305654 JX02 94V-0 wip Hi3518Ev200 SC2135_i2c_dc XM BLK18EV-0035-0042-38X38_S-V1.01 yes Hi3518Ev200 SC2235_i2c_dc XM BLK18EV-0235-38X38-B-V1.01 yes Hi3516Cv300 AR0237_i2c_dc XM BLK16CV3-0237P-38X38-S-V1.01 yes Hi3516Cv300 IMX307_i2c_lvds Raysharp RS-CM-188D 2018-03-16 E150111 yes Hi3516Cv300 IMX323_i2c_dc Longse/HS HI3516CV300-IMX323-POE-TF V1.1 yes Hi3516Cv300 IMX323_i2c_dc Sunywo ZB6323 IPG5020A-T-N6-V0.1 yes Hi3516Cv300 IMX323_i2c_dc XM IVG-HP201Y-AE yes Hi3516Cv300 IMX291_i2c_lvds XM IVG-HP203Y-AE yes Hi3516Cv300 IMX323_spi_dc JVT S323H16XF IPS323-H16X-38X38-V2/V3 yes Hi3516Cv300 JXF22_i2c_dc XM BLK16CV3-0022-38X38-S-V1.01 yes Hi3516Ev100 IMX323_i2c_dc XM BLK16E-0323-38X38-B-V1.01 yes Hi3516Ev100 SC2235P_i2c_dc XM 80HE20PS-S BLK16E-0235-38X38-S-V2.03 yes OpenIPC 2.1 (Buildroot based) \u00b6 Processor Sensor Vendor SKU Board Status Hi3516Ev200 IMX307_i2c_mipi XM IVG-85HF20PY-S yes Hi3516Ev200 SC4239P_i2c_mipi XM IVG-85HF30PS-S yes Hi3516Ev300 IMX335_i2c_mipi XM IVG-85HG50PYA-S yes SSC335 SC3335 Unknown yes More information about sensors (translated from Russian automatically) - https://cctvsp.ru Web interface \u00b6 http://192.168.1.10 - Standard system interface based on OpenWrt Luci Majestic streamer \u00b6 Majestic is a video streaming application, the heart of our firmware (in relation to camera/video surveillance functionality). It's configurable via file /etc/majestic.yaml and by default has many features/services enabled. Unneded options can be turned off for better security and performance. To run majestic in debug mode: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic To run majestic in production mode restart the camera or run command: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic 2>&1 | logger -p daemon.info -t majestic & Camera related URLs in firmware \u00b6 With firmware running, you can access the camera using URLs below (192.168.1.10 is the default IP address): http://192.168.1.10:8888 - HLS live streaming http://192.168.1.10:8888/image.jpg - JPEG image shapshot http://192.168.1.10:8888/image.heif - HEIF image snapshot http://192.168.1.10:8888/image.jpg?width=640&height=360&qfactor=73&color2gray=1 http://192.168.1.10:8888/image.dng - snapshot from sensor in RAW (Adobe DNG) format (only for v2/v3 HiSilicon processors) http://192.168.1.10:8888/mjpeg.html - MJPEG & MP3 streaming http://192.168.1.10:8888/video.mp4 - fMP4 video http://192.168.1.10:8888/audio.mp3 - MP3 audio stream http://192.168.1.10:8888/audio.pcm - Raw PCM audio stream http://192.168.1.10:8888/audio.opus - Experimentally in new versions http://192.168.1.10:8888/audio.m4a - Experimentally in new versions rtsp://192.168.1.10:554/stream=0 - Main channel of RTSP stream (section \"video0:\" in config ) rtsp://192.168.1.10:554/stream=1 - Second channel RTSP streamer (section \"video1:\" in config ) Statistical data \u00b6 Software might do product usage data collection including SoC and sensor model name to gather statistics used in QA process. We guaranty that the data is fully anonymized, and does not contain anything that can arguably be considered data about an individual, that could be considered end-user data; or that could be sensitive or confidential to users. Getting firmware \u00b6 Downloads (latest dev) \u00b6 Building status SoC U-Boot Kernel Rootfs Maintainer Hi3516CV100 uboot kernel rootfs IZ+SS+DI Hi3516CV200 uboot kernel rootfs IZ Hi3516CV300 uboot kernel rootfs IZ+DI Hi3516EV100 uboot kernel rootfs IZ+DI Hi3518AV100 uboot kernel rootfs IZ+SS+DI Hi3518CV100 uboot kernel rootfs IZ+SS+DI Hi3518EV100 uboot kernel rootfs IZ+SS+DI Hi3518EV200 uboot kernel rootfs IZ Hi3518EV201 uboot kernel rootfs IZ Hi3520DV100 ! kernel rootfs IZ Hi3520DV200 ! kernel rootfs IZ Releases \u00b6 The releases of the OpenIPC firmware is hosted at https://github.com/OpenIPC/chaos_calmer/releases Source code \u00b6 The source code of the OpenIPC firmware is hosted at https://github.com/openipc/chaos_calmer Building from source \u00b6 Build on Linux machine \u00b6 Usage example for Debian 8/9 git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git OpenIPC cd OpenIPC ./Project_OpenIPC.sh update ./Project_OpenIPC.sh 16cv300_DEFAULT Use Docker for building \u00b6 Default Dockerfile.openipc FROM debian:stretch RUN DEBIAN_FRONTEND = noninteractive apt-get update \\ && apt-get --no-install-recommends -y install bc bison build-essential \\ ca-certificates cmake cpio curl dos2unix file flex gawk gcc-multilib \\ gettext gettext-base git intltool libc6-dev liblocale-gettext-perl \\ libncurses-dev libssl-dev locales mc openssl python rsync subversion \\ time tofrodos unzip upx wget zlib1g-dev \\ && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias \\ en_US.UTF-8 && rm -rf /var/lib/apt/lists/* ENV LANG en_US.utf8 WORKDIR /src/openipc RUN git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git /src/openipc RUN ./Project_OpenIPC.sh update RUN ./Project_OpenIPC.sh 18ev200_DEFAULT # < = Change this ID to you profile Start building #!/bin/bash docker build -t openipc -f Dockerfile.openipc . Preparing to install \u00b6 Get access to U-boot \u00b6 Serial (UART) connection to your camera device is required. Dahua | Press Shift 8 in U-boot start JVT | Press Ctrl+Q in U-boot start XM | Press Ctrl+C in U-boot start SigmaStar | Press Ctrl+B (UNIV) or Enter (Anjvision) in U-boot start Backup original MAC \u00b6 You should definitely write the original MAC of your device on the eth0 port. This is important and will be necessary at the final stage of device configuration. Backup original firmware \u00b6 8M Flash \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x800000 tftp 0x82000000 fullflash.img 0x800000 16M Flash \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x1000000 tftp 0x82000000 fullflash.img 0x1000000 32M Flash \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 2000000 sf read 0x82000000 0x0 0x2000000 tftp 0x82000000 fullflash.img 0x2000000 Flash and memory layout \u00b6 We have developed a universal partition system for camera flash chips and it is now available as standard for all types of devices. (Note that it means it likely doesn't match vendor flash layout.) OpenIPC flash layout \u00b6 0x000000000000-0x000000040000 : \"boot\" 0x000000040000-0x000000050000 : \"env\" 0x000000050000-0x000000250000 : \"kernel\" 0x000000250000-0x000000750000 : \"rootfs\" 0x000000750000-0x000001000000 : \"rootfs_data\" Kernel Memory Load Addresses \u00b6 loadaddr-$(CONFIG_TARGET_hi35xx_16cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv300) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev200) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_18cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev201) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv200) := 0x80008000 Flashing new firmware \u00b6 Attention ! All examples indicate the download of firmware components via the TFTP server. If your device does not have an Ethernet port, replace in all lines the tftp command everywhere with fatload mmc 0:1 For example: tftp 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin # fatload mmc 0:1 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin Hi3516Cv100 \u00b6 This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! Experimental devices: 00:12:16:FA:F3:52 00:12:12:10:31:54 - BLK18C_0222_38x38_S_v1.03 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3516Cv200 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3516Cv300 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3516Ev100 \u00b6 Experimental devices: 00:12:13:02:d7:2c setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3518Cv100 \u00b6 This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3518Ev100 \u00b6 This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3518Ev200 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3520Dv100 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Hi3520Dv200 \u00b6 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize} Updating parts of the firmware \u00b6 If you already have OpenIPC firmware installed, you can update individual flash partitions from shell command line: Update u-boot \u00b6 flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin boot or flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin /dev/mtd0 Update kernel \u00b6 flashcp -v openwrt-hi35xx-XXXXX-default-uImage kernel Update rootfs \u00b6 flashcp -v openwrt-hi35xx-XXXXX-default-root.squashfs rootfs Configuring system after installation \u00b6 Format overlayfs partition \u00b6 Must be executed on first run flash_eraseall -j /dev/$(awk -F ':' '/rootfs_data/ {print $1}' /proc/mtd) reboot Installing the original MAC \u00b6 U-boot ENV and Linux UCI fw_setenv ethaddr 00:01:02:03:04:05 uci set network.lan.macaddr=00:01:02:03:04:05 uci commit Installing the correct sensor \u00b6 Specify your correct sensor, control type, and data bus fw_setenv sensor imx291_i2c_lvds Resetting configuration \u00b6 If something went wrong, you can reset configuration to defaults. Clean overlayfs (reset) \u00b6 Restore to default Linux settings firstboot reboot Clean u-boot env \u00b6 Restore to default u-boot env flash_eraseall -j /dev/$(awk -F ':' '/env/ {print $1}' /proc/mtd) reboot Recover backup firmware \u00b6 If something goes horribly wrong and you want back your backed up firmware Restore backup up firmware via serial Install kermit using instructions here or similar. Here are the sample commands for 8MB Flash kermit Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x002fb3f1 = 3126257 Bytes ## Start Addr = 0x82000000 OpenIPC # sf probe 0 8192 KiB hi_sfc at 0:0 is now current device OpenIPC # mw.b 0x82000000 ff 1000000 OpenIPC # loadb 0x82000000 ## Ready for binary (kermit) download to 0x82000000 at 115200 bps... (Back at alex-B85M-D3H) ---------------------------------------------------- Linux Kermit> SEND /srv/tftp/fullflash.img Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x00800000 = 8388608 Bytes ## Start Addr = 0x82000000 OpenIPC # sf erase 0x0 0x00800000 Erasing at 0x800000 -- 100% complete. OpenIPC # sf write 0x82000000 0x0 ${filesize} Writing at 0x800000 -- 100% complete. OpenIPC # Restore backup up firmware via TFTP Here are the commands for 8MB Flash setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 fullflash.img sf erase 0x0 0x00800000 sf write 0x82000000 0x0 ${filesize} Reference Book \u00b6 To be written... Vendors \u00b6 ACTi Anjvision | http://icamra.cn/ Ansjer / ZOSI Anviz Brovotech Camasmart / Filsion Cantonk CCDCAM , maybe a trading house... FSAN Herospeed / Longse http://www.ipcam.xin/ Jovision http://www.jvt.cc/English/about.html LENOTEL , maybe a trading house... Longse / Herospeed Milesight Raysharp Ruision Safer , maybe a hardware assembler... http://www.sunywo.com/cn/index.shtml Tiandy Topsee TVT UNIVIEW VandSec / Yoosee , maybe a trading house... VStarcam , maybe a trading house... Wansview XM Z-BEN , maybe a trading house... ZOSI / Ansjer","title":"OpenIPC 1.0 (OpenWrt)"},{"location":"firmware/openipc-1.0/#introduction","text":"This page describes OpenWRT-based firmware variant.","title":"Introduction"},{"location":"firmware/openipc-1.0/#firmware-features","text":"RTSP, ONVIF, NETIP Native ipeye service support Support squashfs, jffs2, overlayfs, vfat Vlan and bridges support Standard OPKG package system Tiny SNMP daemon Curl with SSL for upload/download files Run arbitrary command from u-boot ENV (linux_cmd=) Simple L2/L3 VPN with traffic shaping and compression (vtun) Simply sender Telegram bot (estgb) Low cost 3G USB modems support in hilink and ppp modes \u00b5VPN tunnel service and more ...","title":"Firmware features"},{"location":"firmware/openipc-1.0/#supported-devices","text":"We aim to develop universal , portable firmware supporting wide range of manufacturers and delivering updates and fixes which vendors oftentimes unable to deliver. The list is constantly updated, please visit often and/or follow our Telegram groups for new release notifications.","title":"Supported devices"},{"location":"firmware/openipc-1.0/#openipc-10-openwrt-based","text":"Processor Sensor Vendor SKU Board Status Hi3516Cv100 IMX222_spi_dc XM BLK18C-0222-38X38_S-V1.03 test Hi3518Ev100 OV9712_i2c_dc CamHi/Xin IPC18E_9712_V2.0/V3.1 test Hi3516Cv200 IMX323_i2c_dc XM BLK16CV-0323-38X38-V1.01 yes Hi3516Cv200 IMX323_i2c_dc JVT S323H16VF IPS323-H16V-38X38-V2 yes Hi3516Cv200 IMX323_i2c_mipi XM ? Hi3518Ev200 AR0130_i2c_dc XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0002-2035-38X38-V1.01 yes Hi3518Ev200 JXF22_i2c_dc XM BLK18EV-0022-0130-38X38-V1.01 yes Hi3518Ev200 OV2735_i2c_dc Dahua DH-IPC-C22P E305654 JX02 94V-0 wip Hi3518Ev200 OV9732_ XM BLK18EV-0732-0035-38X38-V1.01 yes Hi3518Ev200 OV9732_i2c_dc Longse/HS LS-IP100/40 3518EV200-OV9732-V1.0 yes Hi3518Ev200 OV9732_i2c_dc Rostelecom QVC-IPC-136W E305654 JX02 94V-0 wip Hi3518Ev200 SC2135_i2c_dc XM BLK18EV-0035-0042-38X38_S-V1.01 yes Hi3518Ev200 SC2235_i2c_dc XM BLK18EV-0235-38X38-B-V1.01 yes Hi3516Cv300 AR0237_i2c_dc XM BLK16CV3-0237P-38X38-S-V1.01 yes Hi3516Cv300 IMX307_i2c_lvds Raysharp RS-CM-188D 2018-03-16 E150111 yes Hi3516Cv300 IMX323_i2c_dc Longse/HS HI3516CV300-IMX323-POE-TF V1.1 yes Hi3516Cv300 IMX323_i2c_dc Sunywo ZB6323 IPG5020A-T-N6-V0.1 yes Hi3516Cv300 IMX323_i2c_dc XM IVG-HP201Y-AE yes Hi3516Cv300 IMX291_i2c_lvds XM IVG-HP203Y-AE yes Hi3516Cv300 IMX323_spi_dc JVT S323H16XF IPS323-H16X-38X38-V2/V3 yes Hi3516Cv300 JXF22_i2c_dc XM BLK16CV3-0022-38X38-S-V1.01 yes Hi3516Ev100 IMX323_i2c_dc XM BLK16E-0323-38X38-B-V1.01 yes Hi3516Ev100 SC2235P_i2c_dc XM 80HE20PS-S BLK16E-0235-38X38-S-V2.03 yes","title":"OpenIPC 1.0 (OpenWRT based)"},{"location":"firmware/openipc-1.0/#openipc-21-buildroot-based","text":"Processor Sensor Vendor SKU Board Status Hi3516Ev200 IMX307_i2c_mipi XM IVG-85HF20PY-S yes Hi3516Ev200 SC4239P_i2c_mipi XM IVG-85HF30PS-S yes Hi3516Ev300 IMX335_i2c_mipi XM IVG-85HG50PYA-S yes SSC335 SC3335 Unknown yes More information about sensors (translated from Russian automatically) - https://cctvsp.ru","title":"OpenIPC 2.1 (Buildroot based)"},{"location":"firmware/openipc-1.0/#web-interface","text":"http://192.168.1.10 - Standard system interface based on OpenWrt Luci","title":"Web interface"},{"location":"firmware/openipc-1.0/#majestic-streamer","text":"Majestic is a video streaming application, the heart of our firmware (in relation to camera/video surveillance functionality). It's configurable via file /etc/majestic.yaml and by default has many features/services enabled. Unneded options can be turned off for better security and performance. To run majestic in debug mode: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic To run majestic in production mode restart the camera or run command: killall -sigint majestic; export SENSOR=$(ipctool --sensor_id); majestic 2>&1 | logger -p daemon.info -t majestic &","title":"Majestic streamer"},{"location":"firmware/openipc-1.0/#camera-related-urls-in-firmware","text":"With firmware running, you can access the camera using URLs below (192.168.1.10 is the default IP address): http://192.168.1.10:8888 - HLS live streaming http://192.168.1.10:8888/image.jpg - JPEG image shapshot http://192.168.1.10:8888/image.heif - HEIF image snapshot http://192.168.1.10:8888/image.jpg?width=640&height=360&qfactor=73&color2gray=1 http://192.168.1.10:8888/image.dng - snapshot from sensor in RAW (Adobe DNG) format (only for v2/v3 HiSilicon processors) http://192.168.1.10:8888/mjpeg.html - MJPEG & MP3 streaming http://192.168.1.10:8888/video.mp4 - fMP4 video http://192.168.1.10:8888/audio.mp3 - MP3 audio stream http://192.168.1.10:8888/audio.pcm - Raw PCM audio stream http://192.168.1.10:8888/audio.opus - Experimentally in new versions http://192.168.1.10:8888/audio.m4a - Experimentally in new versions rtsp://192.168.1.10:554/stream=0 - Main channel of RTSP stream (section \"video0:\" in config ) rtsp://192.168.1.10:554/stream=1 - Second channel RTSP streamer (section \"video1:\" in config )","title":"Camera related URLs in firmware"},{"location":"firmware/openipc-1.0/#statistical-data","text":"Software might do product usage data collection including SoC and sensor model name to gather statistics used in QA process. We guaranty that the data is fully anonymized, and does not contain anything that can arguably be considered data about an individual, that could be considered end-user data; or that could be sensitive or confidential to users.","title":"Statistical data"},{"location":"firmware/openipc-1.0/#getting-firmware","text":"","title":"Getting firmware"},{"location":"firmware/openipc-1.0/#downloads-latest-dev","text":"Building status SoC U-Boot Kernel Rootfs Maintainer Hi3516CV100 uboot kernel rootfs IZ+SS+DI Hi3516CV200 uboot kernel rootfs IZ Hi3516CV300 uboot kernel rootfs IZ+DI Hi3516EV100 uboot kernel rootfs IZ+DI Hi3518AV100 uboot kernel rootfs IZ+SS+DI Hi3518CV100 uboot kernel rootfs IZ+SS+DI Hi3518EV100 uboot kernel rootfs IZ+SS+DI Hi3518EV200 uboot kernel rootfs IZ Hi3518EV201 uboot kernel rootfs IZ Hi3520DV100 ! kernel rootfs IZ Hi3520DV200 ! kernel rootfs IZ","title":"Downloads (latest dev)"},{"location":"firmware/openipc-1.0/#releases","text":"The releases of the OpenIPC firmware is hosted at https://github.com/OpenIPC/chaos_calmer/releases","title":"Releases"},{"location":"firmware/openipc-1.0/#source-code","text":"The source code of the OpenIPC firmware is hosted at https://github.com/openipc/chaos_calmer","title":"Source code"},{"location":"firmware/openipc-1.0/#building-from-source","text":"","title":"Building from source"},{"location":"firmware/openipc-1.0/#build-on-linux-machine","text":"Usage example for Debian 8/9 git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git OpenIPC cd OpenIPC ./Project_OpenIPC.sh update ./Project_OpenIPC.sh 16cv300_DEFAULT","title":"Build on Linux machine"},{"location":"firmware/openipc-1.0/#use-docker-for-building","text":"Default Dockerfile.openipc FROM debian:stretch RUN DEBIAN_FRONTEND = noninteractive apt-get update \\ && apt-get --no-install-recommends -y install bc bison build-essential \\ ca-certificates cmake cpio curl dos2unix file flex gawk gcc-multilib \\ gettext gettext-base git intltool libc6-dev liblocale-gettext-perl \\ libncurses-dev libssl-dev locales mc openssl python rsync subversion \\ time tofrodos unzip upx wget zlib1g-dev \\ && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias \\ en_US.UTF-8 && rm -rf /var/lib/apt/lists/* ENV LANG en_US.utf8 WORKDIR /src/openipc RUN git clone --depth = 1 https://github.com/OpenIPC/chaos_calmer.git /src/openipc RUN ./Project_OpenIPC.sh update RUN ./Project_OpenIPC.sh 18ev200_DEFAULT # < = Change this ID to you profile Start building #!/bin/bash docker build -t openipc -f Dockerfile.openipc .","title":"Use Docker for building"},{"location":"firmware/openipc-1.0/#preparing-to-install","text":"","title":"Preparing to install"},{"location":"firmware/openipc-1.0/#get-access-to-u-boot","text":"Serial (UART) connection to your camera device is required. Dahua | Press Shift 8 in U-boot start JVT | Press Ctrl+Q in U-boot start XM | Press Ctrl+C in U-boot start SigmaStar | Press Ctrl+B (UNIV) or Enter (Anjvision) in U-boot start","title":"Get access to U-boot"},{"location":"firmware/openipc-1.0/#backup-original-mac","text":"You should definitely write the original MAC of your device on the eth0 port. This is important and will be necessary at the final stage of device configuration.","title":"Backup original MAC"},{"location":"firmware/openipc-1.0/#backup-original-firmware","text":"","title":"Backup original firmware"},{"location":"firmware/openipc-1.0/#8m-flash","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x800000 tftp 0x82000000 fullflash.img 0x800000","title":"8M Flash"},{"location":"firmware/openipc-1.0/#16m-flash","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 1000000 sf read 0x82000000 0x0 0x1000000 tftp 0x82000000 fullflash.img 0x1000000","title":"16M Flash"},{"location":"firmware/openipc-1.0/#32m-flash","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0 mw.b 0x82000000 ff 2000000 sf read 0x82000000 0x0 0x2000000 tftp 0x82000000 fullflash.img 0x2000000","title":"32M Flash"},{"location":"firmware/openipc-1.0/#flash-and-memory-layout","text":"We have developed a universal partition system for camera flash chips and it is now available as standard for all types of devices. (Note that it means it likely doesn't match vendor flash layout.)","title":"Flash and memory layout"},{"location":"firmware/openipc-1.0/#openipc-flash-layout","text":"0x000000000000-0x000000040000 : \"boot\" 0x000000040000-0x000000050000 : \"env\" 0x000000050000-0x000000250000 : \"kernel\" 0x000000250000-0x000000750000 : \"rootfs\" 0x000000750000-0x000001000000 : \"rootfs_data\"","title":"OpenIPC flash layout"},{"location":"firmware/openipc-1.0/#kernel-memory-load-addresses","text":"loadaddr-$(CONFIG_TARGET_hi35xx_16cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16cv300) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev200) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_16ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_18cv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev200) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev201) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_18ev300) := 0x40008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv100) := 0x80008000 loadaddr-$(CONFIG_TARGET_hi35xx_20dv200) := 0x80008000","title":"Kernel Memory Load Addresses"},{"location":"firmware/openipc-1.0/#flashing-new-firmware","text":"Attention ! All examples indicate the download of firmware components via the TFTP server. If your device does not have an Ethernet port, replace in all lines the tftp command everywhere with fatload mmc 0:1 For example: tftp 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin # fatload mmc 0:1 0x82000000 openwrt-hi35xx-XXXXX-u-boot.bin","title":"Flashing new firmware"},{"location":"firmware/openipc-1.0/#hi3516cv100","text":"This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! Experimental devices: 00:12:16:FA:F3:52 00:12:12:10:31:54 - BLK18C_0222_38x38_S_v1.03 setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Cv100"},{"location":"firmware/openipc-1.0/#hi3516cv200","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Cv200"},{"location":"firmware/openipc-1.0/#hi3516cv300","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Cv300"},{"location":"firmware/openipc-1.0/#hi3516ev100","text":"Experimental devices: 00:12:13:02:d7:2c setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv300-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3516Ev100"},{"location":"firmware/openipc-1.0/#hi3518cv100","text":"This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18cv100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-16cv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3518Cv100"},{"location":"firmware/openipc-1.0/#hi3518ev100","text":"This type of board has additional Ethernet control systems via GPIO and registers. Consult with experts ! setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3518Ev100"},{"location":"firmware/openipc-1.0/#hi3518ev200","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-18ev200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3518Ev200"},{"location":"firmware/openipc-1.0/#hi3520dv100","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv100-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3520Dv100"},{"location":"firmware/openipc-1.0/#hi3520dv200","text":"setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-experimental-u-boot.bin sf erase 0x0 0x50000 sf write 0x82000000 0x0 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-uImage sf erase 0x50000 0x200000 sf write 0x82000000 0x50000 ${filesize} mw.b 0x82000000 ff 1000000 tftp 0x82000000 openwrt-hi35xx-20dv200-default-root.squashfs sf erase 0x250000 0x500000 sf write 0x82000000 0x250000 ${filesize}","title":"Hi3520Dv200"},{"location":"firmware/openipc-1.0/#updating-parts-of-the-firmware","text":"If you already have OpenIPC firmware installed, you can update individual flash partitions from shell command line:","title":"Updating parts of the firmware"},{"location":"firmware/openipc-1.0/#update-u-boot","text":"flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin boot or flashcp -v openwrt-hi35xx-XXXXX-u-boot.bin /dev/mtd0","title":"Update u-boot"},{"location":"firmware/openipc-1.0/#update-kernel","text":"flashcp -v openwrt-hi35xx-XXXXX-default-uImage kernel","title":"Update kernel"},{"location":"firmware/openipc-1.0/#update-rootfs","text":"flashcp -v openwrt-hi35xx-XXXXX-default-root.squashfs rootfs","title":"Update rootfs"},{"location":"firmware/openipc-1.0/#configuring-system-after-installation","text":"","title":"Configuring system after installation"},{"location":"firmware/openipc-1.0/#format-overlayfs-partition","text":"Must be executed on first run flash_eraseall -j /dev/$(awk -F ':' '/rootfs_data/ {print $1}' /proc/mtd) reboot","title":"Format overlayfs partition"},{"location":"firmware/openipc-1.0/#installing-the-original-mac","text":"U-boot ENV and Linux UCI fw_setenv ethaddr 00:01:02:03:04:05 uci set network.lan.macaddr=00:01:02:03:04:05 uci commit","title":"Installing the original MAC"},{"location":"firmware/openipc-1.0/#installing-the-correct-sensor","text":"Specify your correct sensor, control type, and data bus fw_setenv sensor imx291_i2c_lvds","title":"Installing the correct sensor"},{"location":"firmware/openipc-1.0/#resetting-configuration","text":"If something went wrong, you can reset configuration to defaults.","title":"Resetting configuration"},{"location":"firmware/openipc-1.0/#clean-overlayfs-reset","text":"Restore to default Linux settings firstboot reboot","title":"Clean overlayfs (reset)"},{"location":"firmware/openipc-1.0/#clean-u-boot-env","text":"Restore to default u-boot env flash_eraseall -j /dev/$(awk -F ':' '/env/ {print $1}' /proc/mtd) reboot","title":"Clean u-boot env"},{"location":"firmware/openipc-1.0/#recover-backup-firmware","text":"If something goes horribly wrong and you want back your backed up firmware Restore backup up firmware via serial Install kermit using instructions here or similar. Here are the sample commands for 8MB Flash kermit Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x002fb3f1 = 3126257 Bytes ## Start Addr = 0x82000000 OpenIPC # sf probe 0 8192 KiB hi_sfc at 0:0 is now current device OpenIPC # mw.b 0x82000000 ff 1000000 OpenIPC # loadb 0x82000000 ## Ready for binary (kermit) download to 0x82000000 at 115200 bps... (Back at alex-B85M-D3H) ---------------------------------------------------- Linux Kermit> SEND /srv/tftp/fullflash.img Linux Kermit> CONNECT Connecting to /dev/ttyUSB0, speed 115200 Escape character: Ctrl-\\ (ASCII 28, FS): enabled Type the escape character followed by C to get back, or followed by ? to see other options. ---------------------------------------------------- ## Total Size = 0x00800000 = 8388608 Bytes ## Start Addr = 0x82000000 OpenIPC # sf erase 0x0 0x00800000 Erasing at 0x800000 -- 100% complete. OpenIPC # sf write 0x82000000 0x0 ${filesize} Writing at 0x800000 -- 100% complete. OpenIPC # Restore backup up firmware via TFTP Here are the commands for 8MB Flash setenv ipaddr 192.168.1.10 setenv serverip 192.168.1.254 sf probe 0; sf lock 0 mw.b 0x82000000 ff 1000000 tftp 0x82000000 fullflash.img sf erase 0x0 0x00800000 sf write 0x82000000 0x0 ${filesize}","title":"Recover backup firmware"},{"location":"firmware/openipc-1.0/#reference-book","text":"To be written...","title":"Reference Book"},{"location":"firmware/openipc-1.0/#vendors","text":"ACTi Anjvision | http://icamra.cn/ Ansjer / ZOSI Anviz Brovotech Camasmart / Filsion Cantonk CCDCAM , maybe a trading house... FSAN Herospeed / Longse http://www.ipcam.xin/ Jovision http://www.jvt.cc/English/about.html LENOTEL , maybe a trading house... Longse / Herospeed Milesight Raysharp Ruision Safer , maybe a hardware assembler... http://www.sunywo.com/cn/index.shtml Tiandy Topsee TVT UNIVIEW VandSec / Yoosee , maybe a trading house... VStarcam , maybe a trading house... Wansview XM Z-BEN , maybe a trading house... ZOSI / Ansjer","title":"Vendors"},{"location":"firmware/openipc-2.1/","text":"Supported devices \u00b6 Processors \u00b6 Fullhan (see code in br-ext-chip-fullhan ) fh8852 - start of development fh8856 - start of development HiSilicon (see code in br-ext-chip-hisilicon ) hi3516ev200 - fully ready for use :100: :ok: hi3516ev300 - fully ready for use :100: :ok: hi3518ev300 - ready to use but need more usage reports :+1: we are also porting other processors from our old project SigmaStar (see code in br-ext-chip-sigmastar ) ssc335 - final stage of development :eye: Xiongmai (see code in br-ext-chip-xiongmai ) xm530 - experimental stage of development :office_worker: xm550 - experimental stage of development :office_worker: In the future, support processors is planned: Anyka Goke Grainmedia Ingenic and others... Source code \u00b6 At the moment, we are working on creating a high-quality repository with source code. Please be patient because we want to provide a completely beautiful and ready-made project. Quick build from sources \u00b6 Install some packages to system and clone OpenIPC repo sudo apt-get update -y ; sudo apt-get install -y bc build-essential git unzip git clone --depth=1 https://github.com/OpenIPC/openipc-2.1.git cd openipc-2.1 Run the commands below for your board and your files will end up in the \"output/images\" directory Hi3516Ev200 \u00b6 export PLATFORM=hisilicon make prepare make BOARD=unknown_unknown_hi3516ev200_openipc all Hi3516Ev300 \u00b6 export PLATFORM=hisilicon make prepare make BOARD=unknown_unknown_hi3516ev300_openipc all Hi3518Ev300 \u00b6 export PLATFORM=hisilicon make prepare make BOARD=unknown_unknown_hi3518ev300_openipc all SSC335 \u00b6 export PLATFORM=sigmastar make prepare make BOARD=unknown_unknown_ssc335_openipc all XM530 \u00b6 export PLATFORM=xiongmai make prepare make BOARD=unknown_unknown_xm530_openipc all Statistical data \u00b6 Software might do product usage data collection including SoC and sensor model name to gather statistics used in QA process. We guaranty that the data is fully anonymized, and does not contain anything that can arguably be considered data about an individual, that could be considered end-user data; or that could be sensitive or confidential to users.","title":"OpenIPC 2.1 (Buildroot)"},{"location":"firmware/openipc-2.1/#supported-devices","text":"","title":"Supported devices"},{"location":"firmware/openipc-2.1/#processors","text":"Fullhan (see code in br-ext-chip-fullhan ) fh8852 - start of development fh8856 - start of development HiSilicon (see code in br-ext-chip-hisilicon ) hi3516ev200 - fully ready for use :100: :ok: hi3516ev300 - fully ready for use :100: :ok: hi3518ev300 - ready to use but need more usage reports :+1: we are also porting other processors from our old project SigmaStar (see code in br-ext-chip-sigmastar ) ssc335 - final stage of development :eye: Xiongmai (see code in br-ext-chip-xiongmai ) xm530 - experimental stage of development :office_worker: xm550 - experimental stage of development :office_worker: In the future, support processors is planned: Anyka Goke Grainmedia Ingenic and others...","title":"Processors"},{"location":"firmware/openipc-2.1/#source-code","text":"At the moment, we are working on creating a high-quality repository with source code. Please be patient because we want to provide a completely beautiful and ready-made project.","title":"Source code"},{"location":"firmware/openipc-2.1/#quick-build-from-sources","text":"Install some packages to system and clone OpenIPC repo sudo apt-get update -y ; sudo apt-get install -y bc build-essential git unzip git clone --depth=1 https://github.com/OpenIPC/openipc-2.1.git cd openipc-2.1 Run the commands below for your board and your files will end up in the \"output/images\" directory","title":"Quick build from sources"},{"location":"firmware/openipc-2.1/#hi3516ev200","text":"export PLATFORM=hisilicon make prepare make BOARD=unknown_unknown_hi3516ev200_openipc all","title":"Hi3516Ev200"},{"location":"firmware/openipc-2.1/#hi3516ev300","text":"export PLATFORM=hisilicon make prepare make BOARD=unknown_unknown_hi3516ev300_openipc all","title":"Hi3516Ev300"},{"location":"firmware/openipc-2.1/#hi3518ev300","text":"export PLATFORM=hisilicon make prepare make BOARD=unknown_unknown_hi3518ev300_openipc all","title":"Hi3518Ev300"},{"location":"firmware/openipc-2.1/#ssc335","text":"export PLATFORM=sigmastar make prepare make BOARD=unknown_unknown_ssc335_openipc all","title":"SSC335"},{"location":"firmware/openipc-2.1/#xm530","text":"export PLATFORM=xiongmai make prepare make BOARD=unknown_unknown_xm530_openipc all","title":"XM530"},{"location":"firmware/openipc-2.1/#statistical-data","text":"Software might do product usage data collection including SoC and sensor model name to gather statistics used in QA process. We guaranty that the data is fully anonymized, and does not contain anything that can arguably be considered data about an individual, that could be considered end-user data; or that could be sensitive or confidential to users.","title":"Statistical data"},{"location":"streamers/majestic/","text":"Overview of features \u00b6 Changelog \u00b6 2021.08.08 -","title":"majestic"},{"location":"streamers/majestic/#overview-of-features","text":"","title":"Overview of features"},{"location":"streamers/majestic/#changelog","text":"2021.08.08 -","title":"Changelog"}]}